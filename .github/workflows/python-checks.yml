---
name: python-checks

on:
  workflow_call:
    inputs:
      python-version:
        type: string
        default: "3.12"

      cache-dependency-path:
        type: string
        default: "pyproject.toml"

      enable-ec:
        type: boolean
        default: true

      enable-ruff-format:
        type: boolean
        default: true

      enable-ruff-lint:
        type: boolean
        default: true

      enable-mypy:
        type: boolean
        default: true

      enable-bandit:
        type: boolean
        default: true

      checkout-fetch-depth:
        type: number
        default: 1

    secrets:
      package-repo:
        description: "Package repository authentication token"
        required: false

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.checkout-fetch-depth }}

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'
          cache-dependency-path: ${{ inputs.cache-dependency-path }}

      - name: "Install dependencies"
        env:
          PIP_EXTRA_INDEX_URL: ${{ secrets.package-repo }}
        run: |
          make init-dev

      - name: "Run editorconfig-checker style checks"
        if: ${{ inputs.enable-ec && (success() || failure()) }}
        run: |
          make ec

      - name: "Run ruff format checks"
        if: ${{ inputs.enable-ruff-format-check && (success() || failure()) }}
        run: |
          make ruff-format-check

      - name: "Run ruff lint checks"
        if: ${{ inputs.enable-ruff-lint-check && (success() || failure()) }}
        run: |
          make ruff-lint-check

      - name: "Run bandit security checks"
        if: ${{ inputs.enable-bandit && (success() || failure()) }}
        run: |
          make bandit

      - name: "Run mypy static type checks"
        if: ${{ inputs.enable-mypy && (success() || failure()) }}
        run: |
          make mypy
